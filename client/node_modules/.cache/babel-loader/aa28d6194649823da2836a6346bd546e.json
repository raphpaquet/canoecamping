{"ast":null,"code":"var _jsxFileName = \"/Users/raphaellepaquet/lighthouse/canoecamping/client/src/components/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Circle, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapContainer(props) {\n  _s();\n\n  // for infoWindow \n  const [selected, setSelected] = useState({});\n\n  const onSelect = store => {\n    setSelected(store);\n  };\n\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50vw\",\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  };\n  const mapTheme = [{\n    \"featureType\": \"all\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [{\n      \"weight\": \"2.00\"\n    }]\n  }, {\n    \"featureType\": \"all\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [{\n      \"color\": \"#9c9c9c\"\n    }]\n  }, {\n    \"featureType\": \"all\",\n    \"elementType\": \"labels.text\",\n    \"stylers\": [{\n      \"visibility\": \"on\"\n    }]\n  }, {\n    \"featureType\": \"landscape\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"color\": \"#f2f2f2\"\n    }]\n  }, {\n    \"featureType\": \"landscape\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [{\n      \"color\": \"#ffffff\"\n    }]\n  }, {\n    \"featureType\": \"landscape.man_made\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [{\n      \"color\": \"#ffffff\"\n    }]\n  }, {\n    \"featureType\": \"poi\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"road\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"saturation\": -100\n    }, {\n      \"lightness\": 45\n    }]\n  }, {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [{\n      \"color\": \"#eeeeee\"\n    }]\n  }, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [{\n      \"color\": \"#7b7b7b\"\n    }]\n  }, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [{\n      \"color\": \"#ffffff\"\n    }]\n  }, {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"visibility\": \"simplified\"\n    }]\n  }, {\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"transit\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"water\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"color\": \"#46bcec\"\n    }, {\n      \"visibility\": \"on\"\n    }]\n  }, {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [{\n      \"color\": \"#c8d7d4\"\n    }]\n  }, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [{\n      \"color\": \"#070707\"\n    }]\n  }, {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [{\n      \"color\": \"#ffffff\"\n    }]\n  }];\n  const defaultCenter = {\n    lat: 46.141513,\n    lng: -76.975921\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.GOOGLE_MAP_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 14,\n      center: defaultCenter,\n      options: {\n        styles: mapTheme,\n        scrollwheel: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        center: defaultCenter,\n        radius: 2000,\n        options: {\n          fillColor: '#32CD32',\n          fillOpacity: '0.2',\n          strokeWeight: '0.2'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        label: \"Nous sommes ici\",\n        name: \"Company Location\",\n        position: defaultCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapContainer, \"Gk1ihxo6C0QmBTOHyMJ50k0sYrc=\");\n\n_c = MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/raphaellepaquet/lighthouse/canoecamping/client/src/components/Map.jsx"],"names":["React","useState","GoogleMap","LoadScript","Marker","Circle","InfoWindow","MapContainer","props","selected","setSelected","onSelect","store","mapStyles","height","width","marginLeft","marginRight","mapTheme","defaultCenter","lat","lng","process","env","GOOGLE_MAP_API_KEY","styles","scrollwheel","fillColor","fillOpacity","strokeWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  Circle,\n  InfoWindow\n} from '@react-google-maps/api';\n\n\n\n\n\nexport default function MapContainer (props) {\n\n  // for infoWindow \n  const [selected, setSelected] = useState({});\n  const onSelect = store => {\n    setSelected(store);\n  }\n\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50vw\",\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  };\n\n  const mapTheme = [\n    {\n      \"featureType\": \"all\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"weight\": \"2.00\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"all\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n        {\n          \"color\": \"#9c9c9c\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text\",\n      \"stylers\": [\n        {\n          \"visibility\": \"on\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"color\": \"#f2f2f2\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"poi\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"visibility\": \"off\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"saturation\": -100\n        },\n        {\n          \"lightness\": 45\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#eeeeee\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#7b7b7b\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"visibility\": \"simplified\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [\n        {\n          \"visibility\": \"off\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"transit\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"visibility\": \"off\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n        {\n          \"color\": \"#46bcec\"\n        },\n        {\n          \"visibility\": \"on\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#c8d7d4\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#070707\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        }\n      ]\n    }\n  ]\n\n\n\n  const defaultCenter = {\n    lat: 46.141513, lng: -76.975921\n  }\n\n\n  \n  return (\n\n    <LoadScript\n      googleMapsApiKey={process.env.GOOGLE_MAP_API_KEY}>\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={14}\n        center={defaultCenter}\n        options={{\n          styles: mapTheme,\n          scrollwheel: true,\n        }}\n      >\n        <Circle\n          center={defaultCenter}\n          radius={2000}\n          options={{\n            fillColor: '#32CD32',\n            fillOpacity: '0.2',\n            strokeWeight: '0.2',\n          }}\n        />\n        <Marker\n          label='Nous sommes ici'\n          name='Company Location'\n          position={defaultCenter}\n          \n        />\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}